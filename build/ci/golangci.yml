run:
  concurrency: 8
  tests: true # check test files
  skip-files: []
  skip-dirs: []
  skip-dirs-use-default: true
  modules-download-mode: readonly

output:
  sort-results: true

linters-settings:
  # Errors from the project can be returned without wrapping
  wrapcheck:
    ignorePackageGlobs:
      - github.com/keboola/go-client/*
  # Gci - improved version of goimports
  gci:
    sections:
      - standard # Captures all standard packages if they do not match another section.
      - default # Contains all imports that could not be matched to another section type.
      - prefix(github.com/keboola/go-client)

  gocyclo:
    # minimal code complexity to report, 30 by default (but we recommend 10-20)
    min-complexity: 10

  # Forbidden constructions
  forbidigo:
    forbid:
      # No debug statements
      - ^(fmt\.Print.*|print|println)$
      # No "os" filesystem ops, use "internal/pkg/filesystem" package instead
      - ^(os\.(NewFile|Create.*|Open.*|Ch.*|Link|Symlink|Mkdir|ReadFile|Readlink|Remove.*|Rename|Truncate|Lstat|Stat|Getwd))$
      - ^testhelper.(GetFileContent|Glob)$
      # No "filepath" package, use "internal/pkg/filesystem" package instead
      - ^filepath\..*$
      # "httpmock" singleton is forbidden, it doesn't work in parallel tests, use client.Transport = httpmock.NewMockTransport() instead
      - ^httpmock\.(Activate|ActivateNonDefault|ActivateNonDefault|DeactivateAndReset|RegisterResponder|GetCallCountInfo)$
      # Os ENVs singleton is forbidden, use env.Map instead
      - ^os\.(Setenv|Getenv|Unsetenv|Lookupenv|Clearenv|PathSeparator)$
      # Instead of SetBody, use client.Request.SetJsonBody/SetFormBody
      - ^.*\.SetBody$
      # Instead of "zap" package use "internal/log" package
      - ^zap\.

# https://golangci-lint.run/usage/linters
linters:
  disable-all: true
  # Some linters are not compatible with go 1.18, so they are temporarily disabled.
  # See https://github.com/golangci/golangci-lint/issues/2649
  enable:
    - asciicheck
    #- bodyclose # Not compatible with go 1.18, temporary disable
    #- depguard # Not used
    - dogsled
    - dupl
    - durationcheck
    - errcheck
    - errname
    - errorlint
    - exportloopref
    - forbidigo
    - gci
    - gochecknoglobals
    - gochecknoinits
    - goconst
    #- gocritic # Not compatible with go 1.18, temporary disable
    - godot
    - godox
    - gofumpt
    - goheader
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - importas
    - ineffassign
    - makezero
    - misspell
    - nakedret
    - nilerr
    - noctx
    - predeclared
    - promlinter
    #- rowserrcheck # Not compatible with go 1.18, temporary disable
    #- sqlclosecheck # Not compatible with go 1.18, temporary disable
    - staticcheck
    - stylecheck
    - tagliatelle
    - thelper
    - tparallel
    - paralleltest
    - unconvert
    - unparam
    - unused
    #- wastedassign # Not compatible with go 1.18, temporary disable
    - whitespace
    # DISABLED
    #- goimports # replaced with gci
    #- gofmt # replaced with gofumpt
    #- nolintlint # strange behavior
    #- gomoddirectives # allow replace directive in go.mod
    # TODO
    #- funlen
    #- gocyclo
    #- gocognit
    #- cyclop
    #- nestif
    #- lll
    #- gomnd

issues:
  # List of regexps of issue texts to exclude
  exclude:
    - 'G306: Expect WriteFile permissions to be 0600 or less'
    - 'string `true` has .* occurrences, make it a constant'
    - 'string `false` has .* occurrences, make it a constant'
    - 'ineffectual assignment to ctx'
    - 'this value of `ctx` is never use'

  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gocyclo
        - goconst
        - gosec
        - gochecknoglobals
        - errcheck
        - errorlint
        - dupl
        - dogsled
        - bodyclose
